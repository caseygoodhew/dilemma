@model Dilemma.Business.ViewModels.SystemServerConfigurationViewModel

@{
    ViewBag.Title = "System/Server Configuration";
}

@using (Html.BeginForm("Index", "SystemServerConfiguration", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <h2>System Configuration</h2>

    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.MaxAnswers, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.TextBoxFor(x => x.SystemConfigurationViewModel.MaxAnswers, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.MaxAnswers)
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.QuestionLifetime, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.EnumDropDownListFor(x => x.SystemConfigurationViewModel.QuestionLifetime, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.QuestionLifetime)
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.RetireQuestionAfterDays, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.TextBoxFor(x => x.SystemConfigurationViewModel.RetireQuestionAfterDays, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.RetireQuestionAfterDays)
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.ExpireAnswerSlotsAfterMinutes, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.TextBoxFor(x => x.SystemConfigurationViewModel.ExpireAnswerSlotsAfterMinutes, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.ExpireAnswerSlotsAfterMinutes)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.SystemEnvironment, new {@class = "col-md-2 col-sm-3 control-label"})
        <div class="col-md-3 col-sm-4">
            @Html.EnumDropDownListFor(x => x.SystemConfigurationViewModel.SystemEnvironment, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.SystemEnvironment)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.EnableWebPurify, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.CheckBoxFor(x => x.SystemConfigurationViewModel.EnableWebPurify, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.EnableWebPurify)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.EmailErrors, new {@class = "col-md-2 col-sm-3 control-label"})
        <div class="col-md-3 col-sm-4">
            @Html.CheckBoxFor(x => x.SystemConfigurationViewModel.EmailErrors, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.EmailErrors)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.SystemConfigurationViewModel.EmailErrorsTo, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.TextBoxFor(x => x.SystemConfigurationViewModel.EmailErrorsTo, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.SystemConfigurationViewModel.EmailErrorsTo)
        </div>
    </div>
    
    <h2>Server Configuration</h2>

    <div class="form-group">
        @Html.LabelFor(x => x.ServerConfigurationViewModel.ServerRole, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.EnumDropDownListFor(x => x.ServerConfigurationViewModel.ServerRole, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.ServerConfigurationViewModel.ServerRole)
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(x => x.AccessKey, new { @class = "col-md-2 col-sm-3 control-label" })
        <div class="col-md-3 col-sm-4">
            @Html.TextBoxFor(x => x.AccessKey, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.AccessKey)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Submit"/>
            <a class="btn btn-default" href="@Url.Action("RefreshCache")" role="button">Refresh Cached Entries</a>
        </div>
    </div>

    <div class="form-group" style="margin-top: 50px">
        <div class="col-md-offset-2 col-md-10">
            <a class="btn btn-default btn-danger" href="@Url.Action("TestErrorHandling")" role="button">Test Error Handling</a>
        </div>
    </div>    
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
