@model Dilemma.Business.ViewModels.CreateQuestionViewModel
@{
    ViewBag.Title = "Help us start dilemma";
}

<h2>@ViewBag.Title</h2>

@if (ViewBag.ShowConfirmation == true)
{
    <div>Thanks for your help!</div>
    <div>Please create text for this page.</div>
    
    <div class="form-group">
        <div class="col-md-12">
            @Html.ActionLink("I've got something else to ask!", "Create", "Question", new { @class="btn btn-default"})
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">A description of what we're doing - emphasise that we can't tell who has posted which question - a new user is created everytime that someone visits this page so we can't even tell if someone asks two questions.</div>
    </div>
    
    <p>&nbsp;</p>
    
    using (Html.BeginForm("Seeder", "Question", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
    
        <div class="form-group">
            @Html.LabelFor(x => x.Text, new { @class = "col-md-2 col-sm-3 control-label" })
            <div class="col-md-10 col-sm-9">
                @Html.TextAreaFor(x => x.Text, new { @class = "form-control", rows="10"})
                @Html.ValidationMessageFor(x => x.Text)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(x => x.CategoryId, new { @class = "col-md-2 col-sm-3 control-label" })
            <div class="col-md-3 col-sm-4">
                @Html.DropDownListFor(x => x.CategoryId, new SelectList(Model.Categories, "CategoryId", "Name"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CategoryId)
            </div>
        </div>
    
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" class="btn btn-default" value="Submit" />
            </div>
        </div>
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
