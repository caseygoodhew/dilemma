@using Dilemma.Web.Extensions
@model Dilemma.Business.ViewModels.QuestionViewModel

<h2>Question @Model.QuestionId</h2>

@{
    Func<bool, bool, bool, string> stateClass = (approved, rejected, ismine) =>
        {
            if (approved)
            {
                if (ismine)
                {
                    return "bg-info";
                }

                return "bg-success";
            }

            if (rejected)
            {
                return "bg-danger";
            } 
            
            // queued or other
            return "bg-warning";
        };
} 


<div class="@stateClass(Model.IsApproved, Model.IsRejected, Model.IsMyQuestion)">
    <div class="row">
        <div class="col-md-8 col-md-offset-2"><span class="user-text">@Model.Text</span></div>
    </div>

    <div class="row top-buffer">
        <div class="col-md-8 col-md-offset-2 text-muted">
            <div class="row">
                <small class="col-md-4">Created: @Model.CreatedDateTime.ToRelativeText()</small>
                <small class="col-md-4">Closes: @Model.ClosesDateTime.ToRelativeText()</small>
            </div>
            <div class="row">
                <small class="col-md-4">Category: @Model.CategoryName</small>
                <small class="col-md-4">Max Answers: @Model.MaxAnswers</small>
            </div>
            <div class="row">
                <small class="col-md-2">Mine: @Model.IsMyQuestion</small>
                <small class="col-md-2">Approved: @Model.IsMyQuestion</small>
                <small class="col-md-2">Rejected: @Model.IsRejected</small>
            </div>
        </div>
    </div>
</div>
<hr/>

<h3>Answers</h3>

@{ var topBuffer = ""; }
@foreach (var answer in Model.Answers)
{
    <hr/>
    <div class="@stateClass(answer.IsApproved, answer.IsRejected, answer.IsMyAnswer) @topBuffer">
        <div class="row">
            <div class="col-md-8 col-md-offset-2"><span class="user-text">@answer.Text</span></div>
        </div>
    
        <div class="row top-buffer">
            <div class="col-md-8 col-md-offset-2 text-muted">
                <div class="row">
                    <small class="col-md-4">Created: @answer.CreatedDateTime.ToRelativeText()</small>
                </div>
                <div class="row">
                    <small class="col-md-2">Mine: @answer.IsMyAnswer</small>
                    <small class="col-md-2">Approved: @answer.IsApproved</small>
                    <small class="col-md-2">Rejected: @answer.IsRejected</small>
                </div>
            </div>
        </div>
    </div>
    
    topBuffer = "top-buffer";
}
