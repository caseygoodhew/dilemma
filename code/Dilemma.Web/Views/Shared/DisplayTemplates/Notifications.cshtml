@model Dilemma.Business.ViewModels.NotificationListViewModel

<div class="Card Notification Card-go--container">
    <a href="#" class="Card-go--trigger"></a>
    <div class="Notification-score">
        @if (Model.TotalPointsAwarded == 0)
        {
            <div>
                <span data-icon="notification"></span>
            </div>
        }
        else
        {
            <div>@string.Format("{0}{1}", Model.TotalPointsAwarded > 0 ? "+" : string.Empty, Model.TotalPointsAwarded)
                <span class="Notification-score-label">Points</span>
            </div>
        }
    </div>
    <div class="Notification-summary">
        <div class="Card-label--small">@Model.CreatedDateTime.ToRelativeText()</div>
        <div class="Notification-summary-text">
            @switch (Model.NotificationType)
            {
                case NotificationType.QuestionAnswered:
                    <text>You have new advice for your dilemma!</text>
                    break;
                case NotificationType.PostRejected:
                    <text>One of your posts has been rejected by a moderator. Find out why.</text>
                    break;
                case NotificationType.PointsAwarded:
                    <text>POINTS AWARDED</text>
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
        </div>
    </div><!-- Notification-summary -->
</div>
