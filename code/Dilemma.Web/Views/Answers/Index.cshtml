@using Dilemma.Business.ViewModels
@model Dilemma.Web.ViewModels.DilemmaDetailsViewModel

@{
    ViewBag.IsDilemmaViewPage = true;
}

@if (Model.QuestionDetails == null)
{
    <h2>&nbsp;</h2>
    <div class="line">
        <aside class="sidebar">
            @Html.DisplayFor(x => x.Sidebar, "Sidebar")
        </aside>
        <article class="Dilemma Card">
            <div class="Card-section Card-info">
                <div class="line align-center">
                    <div class="Card-label--small">
                        Erm.... what were you looking for?
                    </div>
                    <div style="margin-bottom: 20px"></div>
                </div>
            </div>
    
            <div class="Card-section">
                <div class="Dilemma-question">
                    <div class="Moderation-entry-text ">
                        <p style="white-space: pre-wrap">We can't find the dilemma that you're looking for. Dilemmas don't last forever - they're removed from the site after a couple of weeks.</p>
                    </div> </div> 
            </div>
        </article>
    </div>
    
}
else
{

    <h1 class="section-label js-sticky">
        <span class="js-sticky--offset">
            <span data-icon="advise"></span>
            @(Model.QuestionDetails.CanAnswer ? "Answer this dilemma" : "Check out this dilemma")
        </span>
    </h1>


    <div class="line">

        <aside class="sidebar">
            @Html.DisplayFor(x => x.Sidebar, "Sidebar")
        </aside>

        <main role="main" class="main">
    
            @Html.DisplayFor(x => x.QuestionDetails.QuestionViewModel, "QuestionSummary")
          
            @if (Model.QuestionDetails.CanAnswer)
            {
                <div id="js-answer-container">
                    @Html.Partial("EditorTemplates/Advise", new AnswerViewModel())
                </div>
            }
        
            @if (Model.QuestionDetails.CanFollowup)
            {
                <div id="js-followup-container">
                    @Html.Partial("EditorTemplates/Followup", new FollowupViewModel())
                </div>
            }
        
            @if (Model.QuestionDetails.QuestionViewModel.HasFollowup)
            {
                @Html.DisplayFor(x => x.QuestionDetails.QuestionViewModel.Followup, "FollowupResponse")
            }

            @foreach (var answer in Model.QuestionDetails.QuestionViewModel.Answers)
            {
                @Html.DisplayFor(x => answer, "Answer", new
           {
               Model.QuestionDetails.CanVote,
               Model.QuestionDetails.QuestionViewModel.IsMyQuestion
           })
            }
        
        </main><!-- main-->   

    </div>
}


@section scripts {
    
    <script>
        window.resetAnswerHook = function() {
            $('#js-button-answer').click(function(e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Advise", "Ajax")',
                    dataType: "html",
                    data: $('form.Answer--window').serialize(),
                    success: function(result) {
                        $("#js-answer-container").html(result);
                        window.resetAnswerHook();
                    },
                    error: function() {
                    }
                });
            });
        };

        $(document).ready(window.resetAnswerHook);
    </script>
    
    <script>
        window.resetFollowupHook = function () {
            $('#js-button-followup').click(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Followup", "Ajax")',
                    dataType: "html",
                    data: $('form.Answer--window').serialize(),
                    success: function (result) {
                        $("#js-followup-container").html(result);
                        window.resetFollowupHook();
                    },
                    error: function () {
                    }
                });
            });
        };

        $(document).ready(window.resetFollowupHook);
    </script>
    
    <script type="text/javascript">
        document.getElementsByTagName('body')[0].className+=' page-answer';
    </script>

}